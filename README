What is it?
===========
Trying to use Windows after being used to i3/awesomewm window management
is a massive pain in the ass. Since there was nothing to emulate some
of the features I wanted, I decided to write my own pseudo-tiling window
manager for Windows.

Functionality includes:
* Binding arbitrary global hotkeys to various builtins or any python function.
* Switching which window is focused based on a direction input.
* Windows are automatically tiled into a main window and stacked sidebar layout.
  A column-based layout is also available.
* Double-sided workspaces per monitor, allowing for easy flipping back and forth.
* Any number of temporary workspaces per monitor, created as needed.

Using
=====
Edit PyleWM.py to set whatever window management hotkeys you'd like,
then execute it from its directory to activate the PyleWM window
management shortcuts.

The default shortcuts are my personal preferred ones based on a customized
dvorak keyboard layout, so you will have to edit them heavily to get anything
halfway sane.

Dependencies
============
Written for minimum Python version 3.6.
Requires pypiwin32 and pystray.

Focus Stealing
==============
Since a lot of this program deals with stealing focus from windows and
giving it to others, we need to set Windows to allow us to steal focus.
By default it'll prevent us from doing so if we don't already own the 
focused window.

To enable focus stealing, set the following registry key to 0:

    HKCU\Control Panel\Desktop\ForegroundLockTimeout

Permissions
===========
Unfortunately, PyleWM will have to run as administrator (it prompts UAC
when ran as user). Windows does not allow window management on system
windows such as Task Manager unless administrator permissions are active.
Worse than that, it will completely deactivate any keyboard hooks that
are present, with no way to detect it, essentially breaking PyleWM whenever
you open Task Manager if it's not elevated.

As an additional bonus, Windows does not allow spawning applications as
a regular user without having prompted for that user's password at least
once. EVEN if you are admin, it still needs that user's credentials.
So, in order to be able to spawn new windows without giving them admin,
after the UAC prompt PyleWM will ask for the user's password in a command
line window.

Windows permissions are weird.
